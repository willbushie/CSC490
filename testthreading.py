import threading

holder = []

def findMin(E):
    val = E[0]
    for i in range(len(E)):
        if val[2] > E[i][2]:
            val = E[i]
    holder = val

def multithread(E):
    # creating the threads
    t1 = threading.Thread(target=findMin,args=(E))
    t2 = threading.Thread(target=findMin,args=(E))
    # start the threads
    t1.start()
    t2.start()
    # check if either thread has completed
    cont = True
    while (cont == True):    
        if (t1.is_alive() == False | t2.is_alive() == False):
            print("a thread completed, killing threads")
            stop_threads = True
            cont = False
    print("threads killed")



data = [[0, 2, 18], [0, 3, 16], [0, 4, 10], [0, 6, 15], [0, 7, 4], [0, 8, 14], [0, 10, 1], [0, 11, 17], [0, 12, 12], [0, 13, 12], [0, 14, 9], [0, 15, 13], [0, 16, 16], [0, 17, 11], [0, 18, 2], [0, 19, 3], [0, 20, 12], [0, 21, 3], [0, 22, 9], [0, 23, 12], [0, 24, 16], [0, 25, 12], [0, 26, 6], [0, 27, 1], [0, 28, 7], [0, 29, 14], [0, 30, 12], [0, 31, 15], [0, 32, 16], [0, 33, 8], [0, 34, 17], [0, 35, 12], [0, 36, 9], [0, 37, 8], [0, 38, 8], [0, 39, 14], [0, 40, 2], [0, 41, 13], [0, 42, 5], [0, 43, 16], [0, 44, 19], [0, 45, 16], [0, 46, 8], [0, 47, 11], [0, 48, 5], [0, 49, 7], [0, 50, 18], [0, 51, 8], [0, 52, 7], [0, 53, 20], [0, 54, 4], [0, 55, 11], [0, 56, 20], [0, 57, 19], [0, 58, 15], [0, 59, 19], [0, 60, 14], [0, 61, 18], [0, 62, 6], [0, 63, 8], [0, 64, 4], [0, 65, 10], [0, 66, 14], [0, 67, 4], [0, 68, 11], [0, 69, 9], [0, 70, 13], [0, 71, 1], [0, 72, 17], [0, 73, 10], [0, 74, 3], [0, 75, 2], [0, 76, 3], [0, 77, 14], [0, 78, 11], [0, 79, 19], [0, 80, 18], [0, 81, 5], [0, 82, 4], [0, 83, 10], [0, 84, 2], [0, 85, 13], [0, 86, 2], [0, 87, 14], [0, 88, 2], [0, 89, 20], [0, 90, 12], [0, 91, 17], [0, 92, 7], [0, 93, 4], [0, 94, 9], [0, 95, 15], [0, 96, 10], [0, 97, 3], [0, 98, 2], [0, 99, 10], [0, 100, 16], [0, 101, 18], [0, 102, 7], [0, 103, 16], [0, 104, 9], [0, 105, 14], [0, 106, 12], [0, 107, 16], [0, 108, 3], [0, 109, 3], [0, 110, 12], [0, 111, 2], [0, 112, 12], [0, 113, 17], [0, 114, 20], [0, 115, 4], [0, 116, 15], [0, 117, 18], [0, 118, 10], [0, 119, 16], [0, 120, 1], [0, 121, 10], [0, 122, 14], [0, 123, 20], [0, 124, 9], [0, 125, 4], [0, 126, 3], [0, 127, 3], [0, 128, 17], [0, 129, 11], [0, 130, 14], [0, 131, 18], [0, 132, 8], [0, 133, 4]]
multithread(data)
print(holder)
